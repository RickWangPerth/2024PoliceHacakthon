services:
  db:
    image: postgres:14-alpine
    ports:
      - '5431:5432'

    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}

    volumes:
      - ./data/db:/var/lib/postgresql/data/

    networks:
      custom_network:
        aliases:
          - ${PROJECT_NAME}_db.local


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    depends_on:
      - backend

    networks:
      custom_network:
        aliases:
          - ${PROJECT_NAME}_react.local

  ngrok:
    image: wernight/ngrok
    command: ngrok http backend:8000
    ports:
      - "4040:4040"
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    networks:
      custom_network:

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile

    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - DATABASE_HOST=db
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}

    ports:
      - '8000:8000'

    volumes:
      - ./backend:/app/backend
      - ./static:/app/backend/static

    depends_on:
      - db

    networks:
      custom_network:
        aliases:
          - ${PROJECT_NAME}_django.local

networks:
  custom_network:
    name: ${PROJECT_NAME}
    driver: bridge


volumes:
  node_modules:
    driver: local
